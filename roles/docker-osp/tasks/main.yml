
  - name: Create volume for docker storage for all instances
    os_volume:
      verify: no
      auth:
        auth_url: "{{ osp_url }}"
        username: "{{ osp_user }}"
        password: "{{ osp_pass }}"
        project_name: "{{ osp_project }}"
      state: present
      availability_zone: "{{ az }}"
      size: "{{ docker_instances.registry.docker_vol_size }}"
      display_name: "{{ docker_instances.registry.docker_vol_name }}-{{ item }}"
    with_sequence:
      count={{ docker_instances.registry.num }}

  - name: launch instances
    os_server:
      verify: no
      auth:
        auth_url: "{{ osp_url }}"
        username: "{{ osp_user }}"
        password: "{{ osp_pass }}"
        project_name: "{{ osp_project }}"
      name: "{{ docker_instances.registry.vm_name }}-{{ item }}"
      state: present
      key_name: "{{ key_name }}"
      availability_zone: "{{ az }}"
      nics:
        - net-name: "{{ network_name }}"
      flavor: "{{ docker_instances.registry.flavor }}"
      image: "{{ image_uid }}"
      security_groups: "{{ security_group }}"
      auto_ip: yes
      volumes:
        - "{{ docker_instances.registry.docker_vol_name }}-{{ item }}"
      timeout: 300
    register: osp_host
    with_sequence:
      count={{ docker_instances.registry.num }}

#  - name: add entry to dns
#    shell: "ssh root@{{ dns_server_local }} 'ipa dnsrecord-add {{ domain }} {{ item.openstack.name }} --a-rec {{ item.openstack.public_v4 }}' "
#    with_items: "{{ osp_host.results }}"
#    register: ssh_result

#  - debug:
#      var: ssh_result
  
  - name: wait for instances become ready to use
    wait_for:
     host: "{{ item.openstack.public_v4 }}"
     port: "22"
     timeout: "320"
     state: "started"
    with_items: "{{ osp_host.results }}"

  - name: add registry server to inventory
    add_host:
      hostname: "{{ osp_host.results[0].openstack.public_v4 }}"
      ansible_ssh_user: cloud-user
      groupname: registry

  - name: Pause playbook execution for 30 seconds
    pause:
      seconds: 30
